------------------------------------------------
-- BOA-DM8 DATABASE CONTENT UPDATE
------------------------------------------------
-- CLEANING OF THE DATABASE CONTENT
-- IN ORDER TO REMOVE INCONSISTENT
-- AND UNUSED CONTENT
------------------------------------------------

-----------------------------------------------------------------------------------
-- ------------- TO PERFORM AFTER UPDATING DB STRUCTURE (V2.4) --------------------

-- SEARCH FOR ARTICLES LOCATED IN SEVERAL LOCATIONS

CREATE VIEW view_ARTICLES_LOCATED AS
	SELECT ID FROM ARTICLE
	WHERE USEDBY_INSTALLATION_ID IS NOT NULL
 UNION ALL
	SELECT ID FROM ARTICLE
	WHERE SENTTO_SUPPLIER_ID IS NOT NULL
 UNION ALL
	SELECT ID FROM ARTICLE
	WHERE LENTTO_SERVICE_ID IS NOT NULL
 UNION ALL
	SELECT RACK_ID FROM CONTAINS_CABINET_RACK
 UNION ALL
	SELECT CABINET_ID FROM CONTAINS_INST_CABINET
 UNION ALL
	SELECT BOARD_ID FROM CONTAINS_PC_BOARD
 UNION ALL
	SELECT BOARD_ID FROM CONTAINS_RACK_BOARD
 UNION ALL
	SELECT ARTICLE_ID FROM CONTAINS_TOOL_ARTICLE
 UNION ALL
	SELECT ARTICLE_ID FROM STORERELATION;

CREATE VIEW view_ARTICLES_NB_LOCATIONS AS
 SELECT view_ARTICLES_LOCATED.ID, COUNT(view_ARTICLES_LOCATED.ID) AS NB_LOCATIONS
  FROM view_ARTICLES_LOCATED
  GROUP BY view_ARTICLES_LOCATED.ID
  ORDER BY NB_LOCATIONS DESC;

-- => Treat manually articles located in several locations

DROP VIEW view_ARTICLES_NB_LOCATIONS;
DROP VIEW view_ARTICLES_LOCATED;


-- SEARCH ARTICLES EXISTING IN ARTICLE TABLE BUT NOT IN CORRESPONDING SUBCLASS TABLE

CREATE VIEW view_ARTICLE_WITHOUT_SUBCLASS_LINE AS
 SELECT ID, DTYPE
  FROM ARTICLE
  WHERE ID NOT IN (
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN CABINET
			WHERE DTYPE = "Cabinet"
		UNION
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN RACK
			WHERE DTYPE = "Rack"
		UNION
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN SWITCH
			WHERE DTYPE = "Switch"
		UNION
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN VARIOUS
			WHERE DTYPE = "Various"
		UNION
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN PC
			WHERE DTYPE = "PC"
		UNION
			SELECT ARTICLE.ID FROM ARTICLE
			NATURAL JOIN BOARD
			WHERE DTYPE = "Board"
  );

-- => Check manually these inconsistencies

DROP VIEW view_ARTICLE_WITHOUT_SUBCLASS_LINE;


-- SEARCH UNUSED HISTORY OR ACTION
--   HISTORY USED NEITHER BY AN ARTICLE NOR BY AN INSTALLATION
--   ACTION HAVING NO ASSOCIATED HISTORY

CREATE VIEW view_UNUSED_HISTORY_ACTION AS
	SELECT HISTORY.ID AS HISTORY_ID, ACTION.ID AS ACTION_ID, FIELDMODIFICATION.ID AS FIELDMODIFICATION_ID
	 FROM HISTORY
	 LEFT JOIN ACTION ON ACTION.HISTORY_ID = HISTORY.ID
	 LEFT JOIN FIELDMODIFICATION ON FIELDMODIFICATION.ID = ACTION.ID
	 WHERE HISTORY.ID NOT IN
		(SELECT HISTORY_ID FROM ARTICLE
		UNION
		 SELECT HISTORY_ID FROM INSTALLATION)
 UNION
	SELECT NULL, ACTION.ID, FIELDMODIFICATION.ID
	 FROM ACTION
	 LEFT JOIN FIELDMODIFICATION ON FIELDMODIFICATION.ID = ACTION.ID
	 WHERE ACTION.HISTORY_ID IS NULL;

DELETE FROM FIELDMODIFICATION
 WHERE ID IN
	(SELECT FIELDMODIFICATION_ID FROM view_UNUSED_HISTORY_ACTION);

DELETE FROM ACTION
WHERE ID IN
	(SELECT ACTION_ID FROM view_UNUSED_HISTORY_ACTION);

DELETE FROM HISTORY
WHERE ID IN
	(SELECT HISTORY_ID FROM view_UNUSED_HISTORY_ACTION);

DROP VIEW view_UNUSED_HISTORY_ACTION;


-- SEARCH UNUSED COMMENTS (NEITHER BY AN ACTION NOR BY A HISTORY NOR BY A TOOL)

CREATE VIEW view_USED_COMMENT AS
 SELECT COMMENT_ID AS ID FROM ACTION
 WHERE COMMENT_ID IS NOT NULL
UNION
 SELECT GENERAL_COMMENT_ID FROM HISTORY
 WHERE GENERAL_COMMENT_ID IS NOT NULL
UNION
 SELECT COMMENT_ID FROM TOOL
 WHERE COMMENT_ID IS NOT NULL;

DELETE FROM COMMENT
WHERE ID NOT IN
	(SELECT ID FROM view_USED_COMMENT);

DROP VIEW view_USED_COMMENT;

